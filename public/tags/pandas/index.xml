<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>pandas on Aaron&#39;s D4ta blog</title>
    <link>https://drwaterx.github.io/til/tags/pandas/</link>
    <description>Recent content in pandas on Aaron&#39;s D4ta blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Nov 2022 11:21:31 -0500</lastBuildDate>
    <atom:link href="https://drwaterx.github.io/til/tags/pandas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Slice well</title>
      <link>https://drwaterx.github.io/til/posts/slices_awry/</link>
      <pubDate>Tue, 15 Nov 2022 11:21:31 -0500</pubDate>
      <guid>https://drwaterx.github.io/til/posts/slices_awry/</guid>
      <description>In this post, I briefly review a few methods to select rows and/or columns of a DataFrame that satisfy one or more criteria. I then introduce two additional requirements that arises frequently in practice&amp;ndash;slicing with previously unknown criteria and managing serialization and deserialization to recover the desired data structure.
Lever multiIndexes I often find pandas&amp;rsquo; multiIndex to be helpful, although I do not observe it used very often. With a multi-indexed DataFrame, pandas&amp;rsquo; .</description>
    </item>
    <item>
      <title>That which is aggregated and its metadata</title>
      <link>https://drwaterx.github.io/til/posts/gbadventures01/</link>
      <pubDate>Fri, 12 Aug 2022 15:14:44 -0500</pubDate>
      <guid>https://drwaterx.github.io/til/posts/gbadventures01/</guid>
      <description>It&amp;rsquo;s impossible to include an associated field value alongside an aggregate of another variable Unlike ndarrays, DataFrames are often heterogeneous. They are a more complete map of how we think of a data set as a whole. When we alter the structure of tabular data, often through aggregation of one field, we want to include values from other fields. This is an example of an issue that arises at the interface of pandas and scikit-learn, for which the ColumnTransformer was created.</description>
    </item>
    <item>
      <title>Aggregation: Implications of indexing</title>
      <link>https://drwaterx.github.io/til/posts/gbadventures02/</link>
      <pubDate>Fri, 22 Jul 2022 14:34:27 -0500</pubDate>
      <guid>https://drwaterx.github.io/til/posts/gbadventures02/</guid>
      <description>While there are multiple syntaxes and methods to produce the same aggregated data, those variations produce different indices. The format and contents of the index can impact other processes, such as serialization and deserialization.
Consider the following artificial transactional data.
txns = pd.concat([pd.DataFrame({&amp;#39;dt&amp;#39;: pd.date_range(&amp;#34;2022&amp;#34;, freq=&amp;#34;D&amp;#34;, periods=10), &amp;#39;amount&amp;#39;: np.random.random(10), &amp;#39;segment&amp;#39;: [&amp;#39;ex&amp;#39;] * 10})] * 10, axis=0) dt amount segment (Timestamp(&amp;lsquo;2022-01-01 00:00:00&amp;rsquo;), 0) 2022-01-01 00:00:00 0.992821 ex (Timestamp(&amp;lsquo;2022-01-01 00:00:00&amp;rsquo;), 0) 2022-01-01 00:00:00 0.</description>
    </item>
  </channel>
</rss>
