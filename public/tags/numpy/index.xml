<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>numpy on Aaron&#39;s D4ta blog</title>
    <link>https://drwaterx.github.io/til/tags/numpy/</link>
    <description>Recent content in numpy on Aaron&#39;s D4ta blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jan 2023 05:15:02 -0500</lastBuildDate><atom:link href="https://drwaterx.github.io/til/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Handle non-sensical operations to avoid downstream errors</title>
      <link>https://drwaterx.github.io/til/posts/numpy_nonsense/</link>
      <pubDate>Thu, 05 Jan 2023 05:15:02 -0500</pubDate>
      
      <guid>https://drwaterx.github.io/til/posts/numpy_nonsense/</guid>
      <description>When attempting to log-transform an array of values with NumPy, keep in mind
Given negative numbers and zeroes, NumPy will output NaN and -inf, respectively, along with a RuntimeWarning. Such values can cause downstream processing to fail or behave unexpectedly. numpy.log provides an argument to handle this situation How that argument affects numpy.log&amp;rsquo;s behavior depends on whether the output goes to a preexisting container or if that container is created on the fly.</description>
    </item>
    
    <item>
      <title>Adventures in aggregation: Part 1</title>
      <link>https://drwaterx.github.io/til/posts/gbadventures01/</link>
      <pubDate>Fri, 12 Aug 2022 15:14:44 -0500</pubDate>
      
      <guid>https://drwaterx.github.io/til/posts/gbadventures01/</guid>
      <description>It&amp;rsquo;s impossible to include an associated field value alongside an aggregate of another variable The mind sometimes has a way of creating a sensible objective that is non-sensical to a machine. We want to tabulate the make of the most expensive car in teh same row as its price. When you use the .agg method with a dictionary, you can end up with misaligned columns
df = pd.DataFrame({&amp;#39;Sector&amp;#39;: [&amp;#39;auto&amp;#39;, &amp;#39;auto&amp;#39;, &amp;#39;auto&amp;#39;], &amp;#39;c&amp;#39;: [&amp;#39;ACME&amp;#39;, &amp;#39;GM&amp;#39;, &amp;#39;FORD&amp;#39;], &amp;#39;am&amp;#39;: [20.</description>
    </item>
    
  </channel>
</rss>
